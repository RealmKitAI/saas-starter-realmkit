# RealmKit SaaS Starter - Docker Compose Configuration
# One command setup: docker-compose up

version: '3.8'

services:
  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: realmkit_saas_app
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      # Database
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASS}@db:5432/${DB_NAME}
      
      # NextAuth.js
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      
      # Stripe
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      
      # Email (optional)
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      
      # Application
      NODE_ENV: ${NODE_ENV:-development}
      
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - uploads:/app/uploads
    networks:
      - realmkit_network

  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: realmkit_saas_db
    restart: unless-stopped
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - realmkit_network

  # Database Administration UI (optional - development only)
  adminer:
    image: adminer:4.8.1
    container_name: realmkit_saas_adminer
    restart: unless-stopped
    ports:
      - "${ADMINER_PORT:-8080}:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
      ADMINER_DEFAULT_USER: ${DB_USER}
      ADMINER_DESIGN: pepa-linha-dark
    depends_on:
      - db
    networks:
      - realmkit_network
    profiles:
      - debug
      - development

  # Redis Cache (optional - for production scaling)
  redis:
    image: redis:7-alpine
    container_name: realmkit_saas_redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-realmkit_redis}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - realmkit_network
    profiles:
      - production
      - scaling

  # Email Service (optional - for development testing)
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: realmkit_saas_mailhog
    restart: unless-stopped
    ports:
      - "${MAILHOG_WEB_PORT:-8025}:8025"  # Web interface
      - "${MAILHOG_SMTP_PORT:-1025}:1025" # SMTP server
    networks:
      - realmkit_network
    profiles:
      - debug
      - development

volumes:
  postgres_data:
    name: realmkit_saas_postgres_data
  redis_data:
    name: realmkit_saas_redis_data
  uploads:
    name: realmkit_saas_uploads

networks:
  realmkit_network:
    name: realmkit_saas_network
    driver: bridge